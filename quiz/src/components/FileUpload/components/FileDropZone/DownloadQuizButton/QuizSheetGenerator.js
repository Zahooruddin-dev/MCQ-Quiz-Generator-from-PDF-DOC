import React from 'react';
import { Document, Packer, Paragraph, TextRun, HeadingLevel, AlignmentType } from 'docx';

const QuizSheetGenerator = {
  // Generate watermark style for PDF
  getWatermarkStyle: () => {
    return `
      @media print {
        .watermark {
          position: fixed;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%) rotate(-45deg);
          font-size: 6em;
          opacity: 0.1;
          color: #999;
          pointer-events: none;
          z-index: -1;
          font-weight: bold;
          font-family: 'Arial', sans-serif;
        }
      }
    `;
  },

  // Generate PDF Quiz Sheet
  generatePDF: async (quizData, questions) => {
    const quizTitle = quizData?.title || 'Quiz Sheet';
    const date = new Date().toLocaleDateString();
    
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <title>${quizTitle}</title>
        <style>
          ${QuizSheetGenerator.getWatermarkStyle()}
          @media print { 
            @page { 
              margin: 1in; 
              @bottom-center {
                content: "Generated by QuizAi - ${new Date().toLocaleDateString()}";
                font-size: 10pt;
                color: #888;
              }
            } 
          }
          body { 
            font-family: 'Arial', sans-serif; 
            line-height: 1.6; 
            color: #333; 
            max-width: 100%; 
            margin: 0; 
            padding: 20px;
            position: relative;
          }
          .watermark {
            display: block;
          }
          .header { 
            text-align: center; 
            margin-bottom: 30px; 
            border-bottom: 2px solid #3f51b5;
            padding-bottom: 15px;
          }
          .title { 
            font-size: 28px; 
            font-weight: bold; 
            margin-bottom: 10px;
            color: #3f51b5;
          }
          .info { 
            font-size: 16px; 
            margin: 8px 0;
            color: #555;
          }
          .instructions {
            background: #f0f4ff;
            border: 1px solid #c5cae9;
            padding: 20px;
            margin: 20px 0;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
          }
          .question { 
            margin: 30px 0; 
            page-break-inside: avoid;
            clear: both;
            padding: 15px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            background: #fff;
          }
          .question-header { 
            font-weight: bold; 
            margin-bottom: 12px; 
            font-size: 18px;
            color: #333;
          }
          .context {
            font-style: italic;
            color: #666;
            margin-bottom: 12px;
            padding: 12px;
            background: #f9f9f9;
            border-left: 4px solid #ddd;
            border-radius: 4px;
          }
          .options { 
            margin-left: 20px;
            line-height: 1.8;
          }
          .option { 
            margin: 10px 0;
            display: block;
          }
          .option-letter {
            font-weight: bold;
            margin-right: 8px;
            color: #3f51b5;
          }
          .answer-line {
            margin-top: 20px;
            border-bottom: 2px dotted #ccc;
            min-height: 28px;
            padding: 5px 0;
            font-weight: bold;
            color: #333;
          }
          .footer { 
            margin-top: 40px; 
            text-align: center; 
            font-size: 12px;
            color: #888;
            border-top: 1px solid #eee;
            padding-top: 15px;
          }
        </style>
      </head>
      <body>
        <div class="watermark">QuizAi</div>
        
        <div class="header">
          <div class="title">${quizTitle}</div>
          <div class="info">Date: ${date}</div>
          <div class="info">Total Questions: ${questions.length}</div>
          <div class="info">Name: _________________________ Class: _________</div>
        </div>
        
        <div class="instructions">
          <strong style="font-size: 18px; color: #3f51b5;">Instructions:</strong>
          <ul style="margin: 15px 0; padding-left: 20px;">
            <li style="margin-bottom: 8px;">Read each question carefully</li>
            <li style="margin-bottom: 8px;">Choose the best answer for each multiple choice question</li>
            <li style="margin-bottom: 8px;">Mark your answer clearly</li>
            <li>Use the answer line provided for each question</li>
          </ul>
        </div>
        
        ${questions.map((question, index) => `
          <div class="question">
            <div class="question-header">
              ${index + 1}. ${question.question}
            </div>
            ${question.context ? `<div class="context">${question.context}</div>` : ''}
            <div class="options">
              ${question.options?.map((option, optionIndex) => 
                `<div class="option">
                  <span class="option-letter">${String.fromCharCode(65 + optionIndex)}.</span> ${option}
                </div>`
              ).join('') || ''}
            </div>
            <div class="answer-line">
              Answer: _________________________________________
            </div>
          </div>
        `).join('')}
        
        <div class="footer">
          Quiz Generated by QuizAi on ${new Date().toLocaleString()} | www.quizai.com
        </div>
      </body>
      </html>
    `;

    const printWindow = window.open('', '_blank');
    printWindow.document.write(htmlContent);
    printWindow.document.close();
    
    setTimeout(() => {
      printWindow.print();
    }, 500);
  },

  // Generate TXT Quiz Sheet
  generateTXT: async (quizData, questions) => {
    const quizTitle = quizData?.title || 'Quiz Sheet';
    const date = new Date().toLocaleDateString();

    let content = `${quizTitle.toUpperCase()}\n`;
    content += `${'='.repeat(quizTitle.length)}\n\n`;
    content += `Date: ${date}\n`;
    content += `Total Questions: ${questions.length}\n`;
    content += `Name: _________________________ Class: _________\n\n`;
    
    content += `INSTRUCTIONS:\n`;
    content += `- Read each question carefully\n`;
    content += `- Choose the best answer for each multiple choice question\n`;
    content += `- Write your answer clearly in the space provided\n\n`;
    
    content += `${'-'.repeat(60)}\n\n`;
    
    questions.forEach((question, index) => {
      content += `${index + 1}. ${question.question}\n`;
      if (question.context) {
        content += `   [Context: ${question.context}]\n`;
      }
      question.options?.forEach((option, optionIndex) => {
        content += `   ${String.fromCharCode(65 + optionIndex)}. ${option}\n`;
      });
      content += `   Answer: _________________________________________________\n\n`;
    });
    
    content += `\nGenerated by QuizAi on ${new Date().toLocaleString()}\n`;
    content += `www.quizai.com\n`;
    
    const blob = new Blob([content], { type: 'text/plain;charset=utf-8;' });
    const link = document.createElement('a');
    link.href = URL.createObjectURL(blob);
    link.download = `${quizData?.title || 'quiz'}-sheet.txt`;
    link.click();
    URL.revokeObjectURL(link.href);
  },

  // Generate DOCX Quiz Sheet
  generateDOCX: async (quizData, questions) => {
    const doc = new Document({
      sections: [{
        properties: {},
        children: [
          new Paragraph({
            text: quizData?.title || "Quiz Sheet",
            heading: HeadingLevel.HEADING_1,
            alignment: AlignmentType.CENTER,
            spacing: { after: 400 },
          }),
          new Paragraph({
            children: [
              new TextRun({
                text: `Date: ${new Date().toLocaleDateString()}`,
                size: 22,
              }),
            ],
          }),
          new Paragraph({
            children: [
              new TextRun({
                text: `Total Questions: ${questions.length}`,
                size: 22,
              }),
            ],
          }),
          new Paragraph({
            children: [
              new TextRun({
                text: "Name: _________________________ Class: _________",
                size: 22,
              }),
            ],
            spacing: { after: 400 },
          }),
          new Paragraph({
            text: "Instructions:",
            heading: HeadingLevel.HEADING_2,
          }),
          new Paragraph({
            text: "• Read each question carefully",
          }),
          new Paragraph({
            text: "• Choose the best answer for each multiple choice question",
          }),
          new Paragraph({
            text: "• Mark your answer clearly",
          }),
          new Paragraph({
            text: "• Use the answer line provided for each question",
            spacing: { after: 400 },
          }),
          ...questions.flatMap((question, index) => [
            new Paragraph({
              text: `${index + 1}. ${question.question}`,
              heading: HeadingLevel.HEADING_3,
              spacing: { after: 200 },
            }),
            ...(question.context ? [
              new Paragraph({
                text: `Context: ${question.context}`,
                italics: true,
                spacing: { after: 200 },
              })
            ] : []),
            ...(question.options?.map((option, optionIndex) => 
              new Paragraph({
                text: `${String.fromCharCode(65 + optionIndex)}. ${option}`,
                indent: { left: 400 },
              })
            ) || []),
            new Paragraph({
              text: "Answer: _________________________________________",
              spacing: { after: 400 },
            }),
          ]),
          new Paragraph({
            text: `Generated by QuizAi on ${new Date().toLocaleString()}`,
            alignment: AlignmentType.CENTER,
            size: 20,
            color: "888888",
          }),
        ],
      }],
    });

    const blob = await Packer.toBlob(doc);
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `${quizData?.title || 'quiz'}-sheet.docx`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  }
};

export default QuizSheetGenerator;